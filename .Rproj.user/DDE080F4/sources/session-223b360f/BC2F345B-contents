# dati e funzioni ----
# source("0-genera-dati-stima-inla.R")
source("0M-genera-dati-stima-inla.R")
source("0-fun-effetti-fissi.R")

# prior beta ----
Q_pri_beta <- prec_fix * diag(p)
S_pri_beta <- solve(Q_pri_beta)

# init quantities
Z <- as.matrix(Z)
Z_star <- Z[ind_s, ]
K_gamma <- diag(ncol(Z))
R_K_gamma <- ncol(Z)
lam_s_mcmc<- lam_s
gamma_samp <- rep(0, ncol(Z))
beta_samp <- c(0,1)
Q_pri_gamma <- K_gamma
X_star_beta_samp <- c(X_star %*% beta_samp)
Z_star_gamma_samp <- c(Z_star %*% gamma_samp)

nmc <- 20000
beta_store_gibbs <- matrix(0, nmc, p)
gamma_store_gibbs <- matrix(0, nmc, ncol(Z))
s2_gamma_store_gibbs <- numeric(nmc)

a_pri <- .1; b_pri <- .1

for(k in 2:nmc){
  aux <- SamplerPoisson::sample_aux_Poisson_2006_r(
    log(lam_s_mcmc), y = y_s, n_mix = n_star, w_mix = par_mix$w, 
    m_mix = par_mix$m, v_mix = par_mix$s2)
  y_star <- aux$z_aux; m_r <- aux$mean_aux; v_r <- aux$var_aux
  
  beta_samp <- gibbs_beta(y_star - Z_star_gamma_samp, X_star, m = m_r, v_r, Q_pri_beta)
  X_star_beta_samp <- c(X_star %*% beta_samp)
  
  gamma_samp <- gibbs_beta(y_star - X_star_beta_samp, Z_star, m = m_r, v_r, Q_pri_gamma)
  gamma_samp <- gamma_samp - mean(gamma_samp)
  Z_star_gamma_samp <- c(Z_star %*% gamma_samp)
  
  lam_s_mcmc <- c(exp(X_s %*% beta_samp + Z %*% gamma_samp))

  s2_gamma <- rgamma(
    1, a_pri + (R_K_gamma)/2, b_pri + c(t(gamma_samp) %*% K_gamma %*% gamma_samp) / 2)
  Q_pri_gamma <- K_gamma * s2_gamma

  beta_store_gibbs[k, ] <- beta_samp
  gamma_store_gibbs[k, ] <- gamma_samp
  s2_gamma_store_gibbs[k] <- 1 / s2_gamma
  if(k%%1000 == 0) print(k)
}

plot(out_inla$marginals.fixed$`(Intercept)`, type = "l")
lines(density(beta_store_gibbs[,1]), col = 4)

plot(out_inla$marginals.fixed$x, type = "l")
lines(density(beta_store_gibbs[,2]), col = 4)

plot(colMeans(gamma_store_gibbs),
out_inla$summary.random$`factor(group_s)`$mean
)
abline(0,1)

plot(out_inla$marginals.hyperpar$`Precision for factor(group_s)`, type = "l")
lines(density(1 / s2_gamma_store_gibbs), col = 4)

quale <- sample(1:10, 1)
plot(out_inla$marginals.random$`factor(group_s)`[[quale]], type = "l", main = quale)
lines(density(gamma_store_gibbs[,quale]), col = 4)



